package com.example.project.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Select;

import com.example.project.model.BookDTO;

@Mapper
public interface BookMapper {
	
	@Select("select"
			+ " book_id as bookId,"
			+ " category_id as categoryId,"
			+ " title as title,"
			+ " author as author,"
			+ " price as price,"
			+ " amount as amount,"
			+ " print_length as printLength,"
			+ " release_year as releaseYear,"
			+ " publisher as publisher,"
			+ " description as description,"
			+ " language_id as languageId,"
			+ " inserted_at as insertedAt,"
			+ " updated_at as updatedAt"
			+ " from Book"
			+ " where book_id = '${book_id}'")
	BookDTO getBookById(String book_id);
	
	@Select("<script>"
			+ " select"
			+ " book_id as bookId,"
			+ " category_id as categoryId,"
			+ " title as title,"
			+ " author as author,"
			+ " price as price,"
			+ " amount as amount,"
			+ " print_length as printLength,"
			+ " release_year as releaseYear,"
			+ " publisher as publisher,"
			+ " description as description,"
			+ " language_id as languageId,"
			+ " inserted_at as insertedAt,"
			+ " updated_at as updatedAt"
			+ " from Book"
			+ " <choose>"
			+ " <when test = \"column == 0\">"
			+ " </when>"
			+ " <when test = \"column == 1\">"
			+ " where category_id = '${searchValue}'"
			+ " </when>"
			+ " <when test = \"column == 2\">"
			+ " where title like '%${searchValue}%'"
			+ " </when>"
			+ " <when test = \"column == 3\">"
			+ " where author like '%${searchValue}%'"
			+ " </when>"
			+ " <when test = \"column == 4\">"
			+ " where price = ${searchValue}"
			+ " </when>"
			+ " <when test = \"column == 5\">"
			+ " where amount = ${searchValue}"
			+ " </when>"
			+ " <when test = \"column == 6\">"
			+ " where print_length = ${searchValue}"
			+ " </when>"
			+ " <when test = \"column == 7\">"
			+ " where release_year = ${searchValue}"
			+ " </when>"
			+ " <when test = \"column == 8\">"
			+ " where publisher like '%${searchValue}%'"
			+ " </when>"
			+ " <when test = \"column == 9\">"
			+ " where language_id = '${searchValue}'"
			+ " </when>"
			+ " <when test = \"column == 10\">"
			+ " where inserted_at = '${searchValue}'"
			+ " </when>"
			+ " <when test = \"column == 11\">"
			+ " where updated_at = '${searchValue}'"
			+ " </when>"
			+ " </choose>"
			+ " <choose>"
			+ " <when test = \"sort == 0\">"
			+ " </when>"
			+ " <when test = \"sort == 1\">"
			+ " order by book_id asc"
			+ " </when>"
			+ " <when test = \"sort == 2\">"
			+ " order by category_id asc"
			+ " </when>"
			+ " <when test = \"sort == 3\">"
			+ " order by title asc"
			+ " </when>"
			+ " <when test = \"sort == 4\">"
			+ " order by author asc"
			+ " </when>"
			+ " <when test = \"sort == 5\">"
			+ " order by price asc"
			+ " </when>"
			+ " <when test = \"sort == 6\">"
			+ " order by amount asc"
			+ " </when>"
			+ " <when test = \"sort == 7\">"
			+ " order by print_length asc"
			+ " </when>"
			+ " <when test = \"sort == 8\">"
			+ " order by release_year asc"
			+ " </when>"
			+ " <when test = \"sort == 9\">"
			+ " order by publisher asc"
			+ " </when>"
			+ " <when test = \"sort == 10\">"
			+ " order by language_id asc"
			+ " </when>"
			+ " <when test = \"sort == 11\">"
			+ " order by inserted_at asc"
			+ " </when>"
			+ " <when test = \"sort == 12\">"
			+ " order by updated_at asc"
			+ " </when>"
			+ " </choose>"
			+ "</script>")
	List<BookDTO> getBooks(String searchValue, int column, int sort);
	
	@Select("<script>"
			+ " select"
			+ " book_id as bookId,"
			+ " category_id as categoryId,"
			+ " title as title,"
			+ " author as author,"
			+ " price as price,"
			+ " amount as amount,"
			+ " print_length as printLength,"
			+ " release_year as releaseYear,"
			+ " publisher as publisher,"
			+ " description as description,"
			+ " language_id as languageId,"
			+ " inserted_at as insertedAt,"
			+ " updated_at as updatedAt"
			+ " from Book"
			+ " where book_id like '%%'"
			+ " <choose>"
			+ " <when test = \"title != ''\">"
			+ " and title like '%${title}%'"
			+ " </when>"
			+ " </choose>"
			+ " <choose>"
			+ " <when test = \"releaseYear != ''\">"
			+ " and release_year = ${releaseYear}"
			+ " </when>"
			+ " </choose>"
			+ " <choose>"
			+ " <when test = \"languageId != ''\">"
			+ " and language_id = '${languageId}'"
			+ " </when>"
			+ " </choose>"
			+ " <choose>"
			+ " <when test = \"categoryId != ''\">"
			+ " and category_id = '${categoryId}'"
			+ " </when>"
			+ " </choose>"
			+ " <choose>"
			+ " <when test = \"minPrice != ''\">"
			+ " and price <![CDATA[>=]]> ${minPrice}"
			+ " </when>"
			+ " </choose>"
			+ " <choose>"
			+ " <when test = \"maxPrice != ''\">"
			+ " and price <![CDATA[<=]]> ${maxPrice}"
			+ " </when>"
			+ " </choose>"
			+ " <choose>"
			+ " <when test = \"sort == 0\">"
			+ " </when>"
			+ " <when test = \"sort == 1\">"
			+ " order by book_id asc"
			+ " </when>"
			+ " <when test = \"sort == 2\">"
			+ " order by category_id asc"
			+ " </when>"
			+ " <when test = \"sort == 3\">"
			+ " order by title asc"
			+ " </when>"
			+ " <when test = \"sort == 4\">"
			+ " order by author asc"
			+ " </when>"
			+ " <when test = \"sort == 5\">"
			+ " order by price asc"
			+ " </when>"
			+ " <when test = \"sort == 6\">"
			+ " order by amount asc"
			+ " </when>"
			+ " <when test = \"sort == 7\">"
			+ " order by print_length asc"
			+ " </when>"
			+ " <when test = \"sort == 8\">"
			+ " order by release_year asc"
			+ " </when>"
			+ " <when test = \"sort == 9\">"
			+ " order by publisher asc"
			+ " </when>"
			+ " <when test = \"sort == 10\">"
			+ " order by language_id asc"
			+ " </when>"
			+ " <when test = \"sort == 11\">"
			+ " order by inserted_at asc"
			+ " </when>"
			+ " <when test = \"sort == 12\">"
			+ " order by updated_at asc"
			+ " </when>"
			+ " </choose>"
			+ "</script>")
	List<BookDTO> getBooksByAttributes(String title, String releaseYear, String languageId, String categoryId, String minPrice, String maxPrice, int sort);
	
	@Select("select count(*) from Book")
	Integer getTotalBooks();
	
}
